<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cooler.semantic.dao.CustomizedWordMapper" >

  <resultMap id="BaseResultMap" type="com.cooler.semantic.entity.CustomizedWord" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="word" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="entity_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="entity" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="account_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    id, word, entity_id, entity, account_id, state, create_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customized_word
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customized_word
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.cooler.semantic.entity.CustomizedWord" >
    insert into customized_word (id, word, entity_id, 
      entity, account_id, state, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{word,jdbcType=VARCHAR}, #{entityId,jdbcType=INTEGER}, 
      #{entity,jdbcType=VARCHAR}, #{accountId,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.cooler.semantic.entity.CustomizedWord" >
    insert into customized_word
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="word != null" >
        word,
      </if>
      <if test="entityId != null" >
        entity_id,
      </if>
      <if test="entity != null" >
        entity,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="word != null" >
        #{word,jdbcType=VARCHAR},
      </if>
      <if test="entityId != null" >
        #{entityId,jdbcType=INTEGER},
      </if>
      <if test="entity != null" >
        #{entity,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.cooler.semantic.entity.CustomizedWord" >
    update customized_word
    <set >
      <if test="word != null" >
        word = #{word,jdbcType=VARCHAR},
      </if>
      <if test="entityId != null" >
        entity_id = #{entityId,jdbcType=INTEGER},
      </if>
      <if test="entity != null" >
        entity = #{entity,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.cooler.semantic.entity.CustomizedWord" >
    update customized_word
    set word = #{word,jdbcType=VARCHAR},
      entity_id = #{entityId,jdbcType=INTEGER},
      entity = #{entity,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>